name: 1 - Deployment to DEV
on:
  push:
    branches:
      - dev
jobs:
  build:
    name: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Install Dependencies
        run: npm install

      - name: Build Project
        run: npm run build

      - name: Get Version
        id: get_version
        run: |
          echo "VERSION=$(jq -r .version package.json)" >> $GITHUB_ENV
          echo "VERSION=$(jq -r .version package.json)"

  run_tests:
    name: run tests
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Sleep for 3 seconds
        run: sleep 3

  sonarqube:
    name: sonarqube
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Sleep for 3 seconds
        run: sleep 3

  upload_to_artifactory:
    name: upload_to_artifactory
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Sleep for 3 seconds
        run: sleep 3

  build_docker_image_and_push:
    name: Build Docker Image and Push to Docker Hub
    runs-on: ubuntu-latest
    needs: [run_tests, sonarqube, upload_to_artifactory]
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Log in to Docker Hub
        run: echo aByF4bBc#yd3Li67 | docker login -u aablotia --password-stdin

      - name: Get Version
        id: get_version
        run: |
          echo "VERSION=$(jq -r .version package.json)" >> $GITHUB_ENV
          echo "VERSION=$(jq -r .version package.json)"

      - name: Build Docker Image
        run: docker build -t aablotia/react-app:${{ env.VERSION }} .

      - name: Push Docker Image to Docker Hub
        run: docker push aablotia/react-app:${{ env.VERSION }}

  deploy-DEV:
    name: Deploy to Server - DEV
    runs-on: ubuntu-latest
    needs: build_docker_image_and_push
    steps:
      - name: Deploy Docker Container
        env:
          DEBIAN_SERVER_USERNAME: aablotia
          DEBIAN_SERVER: 108.17.127.80
          DOCKERHUB_USERNAME: aablotia
          ARTIFACT_ID: react-app
          VERSION: ${{ env.VERSION }}
          ID_RSA: ${{ secrets.ID_RSA }}

        run: |
          echo "${ID_RSA}" > id_rsa
          chmod 600 id_rsa
          echo "Pulling docker image  react-app from Dockerhub ....................................................."
          ssh -i id_rsa -o StrictHostKeyChecking=no $DEBIAN_SERVER_USERNAME@$DEBIAN_SERVER "docker pull ${DOCKERHUB_USERNAME}/${ARTIFACT_ID}:${VERSION}"
          
          echo "Stopping application react-app in docker container ....................................................."
          ssh -i id_rsa -o StrictHostKeyChecking=no $DEBIAN_SERVER_USERNAME@$DEBIAN_SERVER "docker stop react-app || true"
          ssh -i id_rsa -o StrictHostKeyChecking=no $DEBIAN_SERVER_USERNAME@$DEBIAN_SERVER "docker rm react-app || true"

          echo "Running application in docker container ....................................................."
          ssh -i id_rsa -o StrictHostKeyChecking=no $DEBIAN_SERVER_USERNAME@$DEBIAN_SERVER "docker run -d -p 3000:80 --name react-app ${DOCKERHUB_USERNAME}/${ARTIFACT_ID}:${VERSION}"

